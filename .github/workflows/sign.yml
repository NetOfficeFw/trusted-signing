name: sign

on:
  push:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v5

      - name: setup dotnet
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: '8.0.x'

      - name: build
        run: dotnet build src --configuration Release --restore

      - name: package
        run: dotnet pack src --configuration Release --no-build -o ./artifacts

      - name: artifact
        uses: actions/upload-artifact@v5
        with:
          name: AcmeLibrary
          path: artifacts

  sign:
    needs: build

    permissions:
      id-token: write

    environment: production

    runs-on: windows-latest

    steps:
      - name: setup dotnet
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: '8.0.x'

      - name: setup dotnet tools
        run: |
          dotnet tool install --tool-path . --prerelease sign
          dotnet tool install --tool-path . --version 0.1.1 Knapcode.CertificateExtractor
      - name: download artifact
        uses: actions/download-artifact@v5
        with:
          name: AcmeLibrary
          path: artifacts

      - name: azure login
        uses: azure/login@v2
        with:
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-id: ${{ secrets.KEYVAULT_CLIENT_ID }}
          tenant-id: ${{ secrets.KEYVAULT_TENANT_ID }}

      - name: sign package
        shell: pwsh
        run: >
          ./sign code trusted-signing
          **/*.nupkg
          --base-directory "${{ github.workspace }}/artifacts"
          --publisher-name "NetOffice Acme Sample"
          --description "Sample workflow to sign using Azure Trusted Signing service."
          --description-url "https://github.com/NetOfficeFw/trusted-signing/"
          --trusted-signing-endpoint "${{ secrets.TRUSTED_SIGNING_ENDPOINT }}"
          --trusted-signing-account "${{ secrets.TRUSTED_SIGNING_ACCOUNT }}"
          --trusted-signing-certificate-profile "${{ secrets.TRUSTED_SIGNING_PROFILE }}"

      - name: verify signature
        run: dotnet nuget verify "${{ github.workspace }}\artifacts\*.nupkg"

      - name: extract certificate
        shell: pwsh
        run: |
          $nupkg = Get-ChildItem -Path '${{ inputs.working-directory }}\artifacts' -Filter '*.nupkg' | Select-Object -First 1
          nuget-cert-extractor --file $nupkg --output certificates --code-signing --author --leaf

      - name: artifact
        uses: actions/upload-artifact@v5
        with:
          name: AcmeLibrary-signed
          path: artifacts

      - name: certificate artifact
        uses: actions/upload-artifact@v5
        with:
          name: signing-certificate
          path: certificates
